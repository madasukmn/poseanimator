{"id":"utils/colorUtils.js","dependencies":[{"name":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/package.json","includedInParent":true,"mtime":1636789466000},{"name":"./mathUtils","loc":{"line":18,"column":24},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/colorUtils.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/mathUtils.js"},{"name":"paper","loc":{"line":19,"column":23},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/colorUtils.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/paper/dist/paper-full.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = exports.Palette = void 0;\n\nvar _mathUtils = require(\"./mathUtils\");\n\nvar paper = _interopRequireWildcard(require(\"paper\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Palette = /*#__PURE__*/function () {\n  function Palette(colors) {\n    _classCallCheck(this, Palette);\n\n    var scope = paper.default;\n    this.colors = colors.map(function (c) {\n      return {\n        light: new scope.Color(c[0]).convert('hsb'),\n        dark: new scope.Color(c[1]).convert('hsb')\n      };\n    });\n  }\n\n  _createClass(Palette, [{\n    key: \"select\",\n    value: function select(variance) {\n      var scope = paper.default;\n      var pair = this.colors[Math.floor(Math.random() * this.colors.length)];\n\n      var varColor = function varColor(c) {\n        return new scope.Color({\n          hue: c.hue + 360 * _mathUtils.MathUtils.gaussian(0, variance),\n          saturation: c.saturation + _mathUtils.MathUtils.gaussian(0, variance),\n          brightness: c.brightness + _mathUtils.MathUtils.gaussian(0, variance)\n        });\n      };\n\n      return {\n        light: varColor(pair.light),\n        dark: varColor(pair.dark)\n      };\n    }\n  }]);\n\n  return Palette;\n}();\n\nexports.Palette = Palette;\n\nvar ColorUtils = /*#__PURE__*/function () {\n  function ColorUtils() {\n    _classCallCheck(this, ColorUtils);\n  }\n\n  _createClass(ColorUtils, null, [{\n    key: \"addRGB\",\n    value: function addRGB(color, red, green, blue) {\n      color.red = color.red + red;\n      color.green = color.green + green;\n      color.blue = color.blue + blue;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(color0, color1, amt) {\n      return new paper.default.Color(_mathUtils.MathUtils.lerp(color0.red, color1.red, amt), _mathUtils.MathUtils.lerp(color0.green, color1.green, amt), _mathUtils.MathUtils.lerp(color0.blue, color1.blue, amt));\n    } // Generates random color from string hash.\n\n  }, {\n    key: \"fromStringHash\",\n    value: function fromStringHash(str) {\n      // Compute hash from string\n      // Source http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n      var hash = 0,\n          i,\n          chr;\n\n      for (i = 0; i < str.length; i++) {\n        chr = str.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      } // Hash to rgb color.\n\n\n      var r = hash & 255;\n      var g = (hash & 255 << 8) >> 8;\n      var b = (hash & 255 << 16) >> 16;\n      return new paper.default.Color(r / 255, g / 255, b / 255);\n    }\n  }]);\n\n  return ColorUtils;\n}();\n\nexports.ColorUtils = ColorUtils;"},"sourceMaps":null,"error":null,"hash":"790f28fe761611d14cdf1917734d4ba2","cacheData":{"env":{}}}