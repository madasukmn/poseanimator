{"id":"node_modules/core-js/modules/_collection-strong.js","dependencies":[{"name":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/package.json","includedInParent":true,"mtime":1636789466000},{"name":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/package.json","includedInParent":true,"mtime":1636887547023},{"name":"./_object-dp","loc":{"line":2,"column":17},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_object-dp.js"},{"name":"./_object-create","loc":{"line":3,"column":21},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_object-create.js"},{"name":"./_redefine-all","loc":{"line":4,"column":26},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_redefine-all.js"},{"name":"./_ctx","loc":{"line":5,"column":18},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_ctx.js"},{"name":"./_an-instance","loc":{"line":6,"column":25},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_an-instance.js"},{"name":"./_for-of","loc":{"line":7,"column":20},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_for-of.js"},{"name":"./_iter-define","loc":{"line":8,"column":26},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_iter-define.js"},{"name":"./_iter-step","loc":{"line":9,"column":19},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_iter-step.js"},{"name":"./_set-species","loc":{"line":10,"column":25},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_set-species.js"},{"name":"./_descriptors","loc":{"line":11,"column":26},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_descriptors.js"},{"name":"./_meta","loc":{"line":12,"column":22},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_meta.js"},{"name":"./_validate-collection","loc":{"line":13,"column":23},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_collection-strong.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/node_modules/core-js/modules/_validate-collection.js"}],"generated":{"js":"'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n"},"sourceMaps":null,"error":null,"hash":"dd214716cefe431dc7ded7fec18a0bf7","cacheData":{"env":{}}}