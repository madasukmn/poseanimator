{"id":"HF0I","dependencies":[{"name":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/package.json","includedInParent":true,"mtime":1636789466000},{"name":"./skeleton","loc":{"line":18,"column":45},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/illustrationGen/illustration.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/illustrationGen/skeleton.js"},{"name":"../utils/mathUtils","loc":{"line":19,"column":26},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/illustrationGen/illustration.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/mathUtils.js"},{"name":"../utils/svgUtils","loc":{"line":20,"column":25},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/illustrationGen/illustration.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/svgUtils.js"},{"name":"../utils/colorUtils","loc":{"line":21,"column":27},"parent":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/illustrationGen/illustration.js","resolved":"/Users/kmadasu/kishore/trainings/javascript-gt/gautam/poseanimator/utils/colorUtils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.PoseIllustration=void 0;var n=require(\"./skeleton\"),e=require(\"../utils/mathUtils\"),t=require(\"../utils/svgUtils\"),o=require(\"../utils/colorUtils\");function i(n,e){if(!(n instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function r(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function s(n,e,t){return e&&r(n.prototype,e),t&&r(n,t),n}var a={};n.allPartNames.forEach(function(n){return a[n]=1});var l=.3,u=function(){function r(n){i(this,r),this.scope=n,this.frames=[]}return s(r,[{key:\"updateSkeleton\",value:function(e,t){if(this.pose=e,this.face=t,this.skeleton.update(e,t),this.skeleton.isValid){this.skinnedPaths.forEach(function(e){var t=0;e.segments.forEach(function(e){var o;t+=(o=e.point,Object.keys(o.skinning).reduce(function(n,e){var t=o.skinning[e];return n+t.bone.score*t.weight},0)),e.point.currentPosition=n.Skeleton.getCurrentPosition(e.point),e.handleIn&&(e.handleIn.currentPosition=n.Skeleton.getCurrentPosition(e.handleIn)),e.handleOut&&(e.handleOut.currentPosition=n.Skeleton.getCurrentPosition(e.handleOut))}),e.confidenceScore=t/(e.segments.length||1)})}}},{key:\"draw\",value:function(){if(this.skeleton.isValid){var n=this.scope;this.skinnedPaths.forEach(function(e){if(e.confidenceScore&&!(e.confidenceScore<l)){var t=new n.Path({fillColor:e.fillColor,strokeColor:e.strokeColor,strokeWidth:e.strokeWidth,closed:e.closed});e.segments.forEach(function(n){t.addSegment(n.point.currentPosition,n.handleIn?n.handleIn.currentPosition.subtract(n.point.currentPosition):null,n.handleOut?n.handleOut.currentPosition.subtract(n.point.currentPosition):null)}),e.closed&&t.closePath(),n.project.activeLayer.addChild(t)}})}}},{key:\"debugDraw\",value:function(){var n=this.scope,e=new n.Group;n.project.activeLayer.addChild(e);var t=function(t){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.addChild(new n.Path.Circle({center:[t.x,t.y],radius:o.radius||2,fillColor:o.fillColor||\"red\"}))},i=function(t,o){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.addChild(new n.Path({segments:[t,o],strokeColor:i.strokeColor||\"red\",strokeWidth:i.strokeWidth||1}))};this.skeleton.debugDraw(n),this.skinnedPaths.forEach(function(e){e.segments.forEach(function(e){var r=new n.Color(0);Object.keys(e.point.skinning).forEach(function(n){var t=e.point.skinning[n];o.ColorUtils.addRGB(r,t.weight*t.bone.boneColor.red,t.weight*t.bone.boneColor.green,t.weight*t.bone.boneColor.blue);var s=t.bone.kp0.currentPosition.multiply(1-t.transform.anchorPerc).add(t.bone.kp1.currentPosition.multiply(t.transform.anchorPerc));i(s,e.point.currentPosition,{strokeColor:\"blue\",strokeWidth:t.weight})}),t(e.point.currentPosition,{fillColor:r}),t(e.handleIn.currentPosition,{fillColor:r}),i(e.point.currentPosition,e.handleIn.currentPosition,{strokeColor:r}),t(e.handleOut.currentPosition,{fillColor:r},{strokeColor:r}),i(e.point.currentPosition,e.handleOut.currentPosition)})})}},{key:\"debugDrawLabel\",value:function(n){this.skeleton.debugDrawLabels(n)}},{key:\"bindSkeleton\",value:function(n,e){var o=e.project.getItems({recursive:!0});o=o.filter(function(n){return n.parent&&n.parent.name&&n.parent.name.startsWith(\"illustration\")}),this.skeleton=n,this.skinnedPaths=[];for(var i=0;i<o.length;i++){var r=o[i];t.SVGUtils.isGroup(r)?this.bindGroup(r,n):t.SVGUtils.isPath(r)?this.bindPathToBones(r):t.SVGUtils.isShape(r)&&this.bindPathToBones(r.toPath())}}},{key:\"bindGroup\",value:function(o,i){var r=this,s=[],a={};o.getItems({recursive:!0}).forEach(function(e){var o=e.name?n.allPartNames.find(function(n){return e.name.startsWith(n)}):null;o?a[o]={position:e.bounds.center,name:o}:t.SVGUtils.isPath(e)?s.push(e):t.SVGUtils.isShape(e)&&s.push(e.toPath())});var l=[],u=i.bones.filter(function(n){return a[n.kp0.name]&&a[n.kp1.name]}),c=i.bNose3Nose4.kp1.position;u.length&&(u.forEach(function(t){var o=a[t.kp0.name],i=a[t.kp1.name],r=(new n.Bone).set(o,i,t.skeleton,t.type);o.transformFunc=e.MathUtils.getTransformFunc(t.kp0.position,c,o.position),i.transformFunc=e.MathUtils.getTransformFunc(t.kp1.position,c,i.position),r.parent=t,l.push(r)}),i.secondaryBones=i.secondaryBones.concat(l),s.forEach(function(n){r.bindPathToBones(n,l)}))}},{key:\"getWeights\",value:function(n,t){var o=0,i={};t.forEach(function(t){var o=e.MathUtils.getClosestPointOnSegment(t.kp0.position,t.kp1.position,n).getDistance(n),r=1/(o*o);i[t.name]={value:r,bone:t}});var r=Object.values(i).sort(function(n,e){return e.value-n.value});return i={},o=0,r.forEach(function(n){i[n.bone.name]=n,o+=n.value}),0===o?{}:(Object.values(i).forEach(function(n){n.value/=o}),i)}},{key:\"bindPathToBones\",value:function(n,t){var o=this,i=n.segments.map(function(n){var i=e.MathUtils.isCollinear(n.handleIn,n.handleOut),r=t||o.skeleton.findBoneGroup(n.point),s=o.getWeights(n.point,r),a={point:o.getSkinning(n.point,s)};if(n.handleIn){var l=n.handleIn.add(n.point);a.handleIn=o.getSkinning(l,i?s:o.getWeights(l,r))}if(n.handleOut){var u=n.handleOut.add(n.point);a.handleOut=o.getSkinning(u,i?s:o.getWeights(u,r))}return a});this.skinnedPaths.push({segments:i,fillColor:n.fillColor,strokeColor:n.strokeColor,strokeWidth:n.strokeWidth,closed:n.closed})}},{key:\"getSkinning\",value:function(n,e){var t={};return Object.keys(e).forEach(function(o){t[o]={bone:e[o].bone,weight:e[o].value,transform:e[o].bone.getPointTransform(n)}}),{skinning:t,position:n,currentPosition:new this.scope.Point(0,0)}}}]),r}();exports.PoseIllustration=u;"},"sourceMaps":null,"error":null,"hash":"018d8a583930cc2604d53cdc62f98390","cacheData":{"env":{}}}